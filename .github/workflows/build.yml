name: Build and Push Docker Image

on:
  release:
    types: [published]
  push:
    branches:
      - master
  workflow_dispatch:

env:
  IMAGE_NAME: ygege

jobs:
  build:
    name: Build & Push
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            platform: linux/amd64
          - runner: ubuntu-latest-arm64
            platform: linux/arm64
    runs-on: ${{ matrix.runner }}
    outputs:
      digest-amd64: ${{ steps.set_outputs.outputs.digest-amd64 }}
      digest-arm64: ${{ steps.set_outputs.outputs.digest-arm64 }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          build-args: |
            BUILD_VERSION=master
            BUILD_DATE=${{ github.event.repository.updated_at }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
      - name: Set outputs
        id: set_outputs
        run: |
          platform="${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}"
          echo "digest-${platform}=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT

  manifest:
    name: Create Manifest
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifests
        run: |
          # Docker Hub
          docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}@${{ needs.build.outputs.digest-amd64 }} \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}@${{ needs.build.outputs.digest-arm64 }}
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

          # GHCR
          docker manifest create ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest \
            --amend ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}@${{ needs.build.outputs.digest-amd64 }} \
            --amend ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}@${{ needs.build.outputs.digest-arm64 }}
          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest